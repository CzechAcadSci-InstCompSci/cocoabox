function [M]=cocoa_ER_matrix_set_VAR1(m,n,D,s,Symmetry, Autocorrelation)
%cocoa_Thresh - Generator of random (Erdos-Renyi model based) set of matrices M with
%               optional density (percentage of nonzero elements). Each
%               matrix A from M is normalized by constant s/max(abs(eig(A))) 
%               (s is optional parameter) such as eigenvalues of A are less than 1. 
%               VAR(1) process  generated by such matrix is then stationary.
%              
%               
%
% Syntax:  [M]=cocoa_ER_matrix_set_VAR1(m,n,D,s,Symmetry, Autocorrelation)
%

%
% Inputs:
%    m - number of matrices in set
%    n - Dimension of the matrix A (nxn)
%    D - Density of matrix A (percentage of nonzero elements).
%    s - Normalizing parameter in (0,1) specifying the biggest eigenvalue
%        of A (after normalization max(abs(eig(A)))=s)
%    Symmetry - Optional parameter, option 'sym' - all matrices in M are
%               symmetric or not (option 'not_sym').
%    Autocorrelation - Optional parameter, option 'autocorr' - all matrices in M are
%               autocorrelated or not (option 'not_autocorr').
%   
% Outputs:
%    M - Set of square matrices (dimension nxn) with density D and biggest
%    eigenvalue (in absolute value) s. (Generating matrix of stationary
%    VAR(1) process. size(M)= n x n x m

if (s>=1)
    error('Input s must be a number in (0,1)')
end


 if ~exist('Symmetry','var')
      Symmetry = 'not_sym';
 end
 
  if ~exist('Autocorrelation','var')
      Autocorrelation = 'autocorr';
  end

M=zeros(n,n,m);


for j=1:1:m  

switch Symmetry
     case 'sym'
        A=rand(n);
        A=(A+A')/2 ;
     case 'not_sym'
        A=rand(n);
end



switch Autocorrelation
    case 'autocorr'
        for i=1:1:n
            A(i,i)=1; 
        end

    case'not_autocorr'
        for i=1:1:n
            A(i,i)=0; 
        end
end

Asort=sort(reshape(A,[1,n*n])); 
Thld=Asort(floor(n*n*(1-D))); 
A(A<=Thld)=0;
A(A>Thld)=1;




lambda=max(abs(eig(A)));

if(lambda~=0)
    A=s/lambda*A;
else
   warning('All eigenvalues of A are equal to 0');
            
end

M(:,:,j)=A;
end

